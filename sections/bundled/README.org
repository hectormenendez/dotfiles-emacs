* Bundled featues
These are the settings for the functionality currently bundled with Emacs.

** [[https://github.com/emacs-mirror/emacs/blob/master/lisp/simple.el][simple.el]]
Emacs commands not specifically related to some major mode or to file-handling.
#+BEGIN_SRC emacs-lisp
  (use-package simple
      :demand t
      :config
      ;; the location for auto-save files
      (setq auto-save-list-file-prefix
          (expand-file-name "_auto-save-list/" user-emacs-directory)
      )
      (auto-save-mode 1); Enable auto saving files
      (column-number-mode 1); Show the current-column number
      (global-hl-line-mode 1); Highlight the current line
  )
#+END_SRC

** [[https://github.com/emacs-mirror/emacs/blob/master/lisp/server.el][server.el]]
Once it finishes loading, enable Emacs server so other instances can connect to it.
#+BEGIN_SRC emacs-lisp
  (use-package server
      :demand t
      :init
      (add-hook 'after-init-hook (lambda ()
          (unless (server-running-p) (server-start))
      ))
  )
#+END_SRC

** [[https://github.com/emacs-mirror/emacs/blob/master/lisp/files.el][files.el]]
Defines most of Emacs's file-handling functions.
#+BEGIN_SRC emacs-lisp
  (use-package files
      :demand t
      :config
      (setq
          ;; Handle backups
          make-backup-files t
          delete-old-versions t
          backup-directory-alist '(
              ("." . (expand-file-name "_backups/" user-emacs-directory))
          )
          ;; Handle backup version control
          version-control t; Keep control of backups
          vc-follow-symlinks t; Don't ask to follow symlinks, just do it.
          ;; Handle AutoSave
          auto-save-default nil; Disable auto-saving
          auto-save-file-name-transforms'(
              (".*" (expand-file-name "_auto-save/" user-emacs-directory) t)
          )
          ;; Misc
          require-final-newline nil; Don't end files with newline
      )
  )
#+END_SRC

** [[https://github.com/emacs-mirror/emacs/blob/master/lisp/recentf.el][recentf.el]]
Maintains a menu for visiting files that were operated on recently.
The recentf file list automatically saved across Emacs sessions.
#+BEGIN_SRC emacs-lisp
  (use-package recentf
      :demand t
      :config
      (setq
          recentf-save-file (expand-file-name "_recentf" user-emacs-directory)
          recentf-filename-handlers '(abbreviate-file-name)
      )
      (recentf-mode 1)
  )
#+END_SRC

** [[https://github.com/emacs-mirror/emacs/blob/master/lisp/savehist.el][savehist.el]]
Many editors (e.g. Vim) have the feature of saving minibuffer history to an external
file after exit.  This package provides the same feature in Emacs.
#+BEGIN_SRC emacs-lisp
  (use-package savehist
      :demand t
      :config
          (setq
              savehist-file (expand-file-name "_history" user-emacs-directory)
              savehist-save-minibuffer-history 1
              history-length t
              history-delete-duplicates t
          )
          (savehist-mode 1)
  )
#+END_SRC

** [[https://github.com/emacs-mirror/emacs/blob/master/lisp/saveplace.el][saveplace.el]]
Automatically save place in files, so that visiting them later automatically moves point
to the saved position, when the file is first found.
#+BEGIN_SRC emacs-lisp
  (use-package saveplace
      :demand t
      :config
          (setq save-place-file (expand-file-name "_saveplace" user-emacs-directory))
          (save-place-mode 1)
  )
#+END_SRC

** [[https://github.com/emacs-mirror/emacs/blob/master/lisp/autorevert.el][autorevert.el]]
Whenever a file is changed externally, auto update it if it's opened.
#+BEGIN_SRC emacs-lisp
  (use-package autorevert
      :demand t
      :delight (auto-revert-mode); don't show the mode-line
      :config
      (setq
          auto-revert-verbose nil; no need of advertise the revert
          global-auto-revert-non-file-buffers t; Enable autorevert on dired buffers
      )
      (global-auto-revert-mode 1)
  )
#+END_SRC

#+BEGIN_SRC emacs-lisp
  ;; ;; ---------------------------------------------------------------------- PackagesÂ» Native
  ;; (require 'native-custom)
  ;; (require 'native-mule)
  ;; (require 'native-whitespace)
  ;; (require 'native-paren)
  ;; (require 'native-prog-mode)
  ;; (require 'native-frame)
  ;; (require 'native-menu-bar)
  ;; (require 'native-register)
  ;; (require 'native-electric)
  ;; (require 'native-line-numbers)
#+END_SRC

