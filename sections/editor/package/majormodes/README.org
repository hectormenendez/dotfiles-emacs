* Major modes
These packages add a complex, highly integrated functionality to the editor.

** Magit
An interface to GIT (and the main reason I cannot quit using Emacs).
#+BEGIN_SRC emacs-lisp
  (use-package magit
      :ensure t
      :commands
          (
              magit-status
              magit-commit
              magit-push
              magit-diff-dwim
          )
      :init
          (add-hook 'evil-leader-mode-hook '(lambda ()
              (evil-leader/set-key "gs" 'magit-status)
              (evil-leader/set-key "gc" 'magit-commit)
              (evil-leader/set-key "gp" 'magit-push)
              (evil-leader/set-key "gd" 'magit-diff-dwim)
              (evil-leader/set-key "gl" 'magit-log-all-branches)
          ))
  )
#+END_SRC

** Evil
A layer on top of Emacs which allows Vim to be emulated.
- it requires undo-tree for linear undo and undo branches. (?)

*** Main Configuration
It will load until evil-mode will run, which is right after init.
#+BEGIN_SRC emacs-lisp
  (use-package evil
      :ensure t
      :commands evil-mode
      :init (add-hook 'after-init-hook #'evil-mode)
      :bind (
          :map evil-insert-state-map
              ("TAB" . tab-to-tab-stop); Have <tab> to work as it does on Vim
              ("DEL" . etor/backspace-to-tab-stop); Make <del> delete tabs)
          :map evil-motion-state-map
              ("C-b" . nil); no more scroll down
       )
      :config
          ;; Auto indent after paste
          (fset 'indent-pasted-text "`[v`]=")
  )

#+END_SRC

*** Plugins
Further Vim functionality ported.

**** Evil Leader
Enable the <leader> key like in Vim
#+BEGIN_SRC emacs-lisp
  (use-package evil-leader
      :ensure t
      :commands evil-leader-mode
      :init (add-hook 'evil-mode-hook #'evil-leader-mode)
      :config
          (evil-leader/set-leader "SPC")
          ;; TODO: this should be set on the which-key package
          (evil-leader/set-key "?" 'which-key-show-top-level)
          (evil-leader/set-key "wW" 'etor/window-toggle); allows toggling full-screen
  )
#+END_SRC

**** Evil commentary
A port of tpope's vim-commentary
#+BEGIN_SRC emacs-lisp
  (use-package evil-commentary
      :ensure t
      :delight evil-commentary-mode
      :commands evil-commentary-mode
      :init (add-hook 'prog-mode-hook #'evil-commentary-mode)
  )
#+END_SRC

**** Evil surround
Enable tpope's vim-surround port (globally)
#+BEGIN_SRC emacs-lisp
  (use-package evil-surround
      :ensure t
      :delight evil-surround-mode
      :commands evil-surround-mode
      :init (add-hook 'prog-mode-hook #'evil-surround-mode)
  )
#+END_SRC
