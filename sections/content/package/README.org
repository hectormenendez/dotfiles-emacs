* Content packages
These packages add extra functionality to the content.

** UndoTree
Keeps a state of changes which allow you to restore them afterwards.
*NOTE:* `evil-mode` depends on this.
#+BEGIN_SRC emacs-lisp
  (use-package undo-tree
      :ensure t
      :delight undo-tree-mode
      :bind (("C-x u" . undo-tree-visualize))
      :init
          (add-hook 'after-init-hook #'global-undo-tree-mode)
          ;; Apparently these values help undotree not to choke on large files.
          ;; TODO: Shouldn't these be moved to `init.el`
          (setq-default
              print-circle t
              print-length nil
              print-level nil
          )
      :config
          (setq
              undo-tree-auto-save-history t
              undo-tree-visualizer-diff t; show diff when visualizing
              undo-tree-visualizer-timestamps t; show time of undos
              undo-tree-history-directory-alist
                  `(("." . ,(expand-file-name "_undotree" user-emacs-directory)))
          )
  )
#+END_SRC

# PROGMODE NAVIGATION, SELECTION & MODIFIERS
# (require 'elpa-company)
# (require 'elpa-flycheck)
# (require 'elpa-dumb-jump)
# (require 'elpa-dtrt-indent)
# (require 'elpa-multiple-cursors)
# (require 'elpa-expand-region)
# (require 'elpa-web-beautify)

# PROGMODE VISUAL AIDS
# (require 'elpa-hl-todo)
# (require 'elpa-smartparens)
# (require 'elpa-rainbow-delimiters)
# (require 'elpa-rainbow-mode)
# (require 'elpa-highlight-numbers)
# (require 'elpa-highlight-quoted)

# PROGMODE SYNTAXES
# (require 'elpa-web-mode)
# (require 'elpa-json-mode)
# (require 'elpa-ecmascript)
# (require 'elpa-graphql-mode)

# (require 'elpa-markdown-mode)
# (require 'elpa-nxml-mode)

# (require 'elpa-elixir-mode)
