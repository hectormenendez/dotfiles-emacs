#+TITLE: Evil mode declarations

***** Toggle making current buffer use the whole window.               :test:
#+BEGIN_SRC emacs-lisp
  (defun etor/evil:window-toggle ()
      "Toggle making current buffer use the whole window."
      (interactive)
      (if (= 1 (length (window-list)))
          (jump-to-register '_)
          (progn
              (window-configuration-to-register '_)
              (delete-other-windows)
          )
      )
  )
#+END_SRC

***** Delete whitespace backwards to the next tab-stop, otherwise delete one character.
#+BEGIN_SRC emacs-lisp
  (defun etor/backspace-to-tab-stop ()
      "Delete whitespace backwards to the next tab-stop, otherwise delete one character."
      (interactive)
      (if
          (or indent-tabs-mode
              (region-active-p)
              (save-excursion
                  (> (point) (progn (back-to-indentation) (point)))
              ))
          (call-interactively 'backward-delete-char-untabify)
          (let
              ((movement (% (current-column) tab-width)) (p (point)))
              (when (= movement 0) (setq movement tab-width))
              ;; Account for edge case near beginning of buffer
              (setq movement (min (- p 1) movement))
              (save-match-data
                  (if
                      (string-match "[^\t ]*\\([\t ]+\\)$"
                          (buffer-substring-no-properties (- p movement) p)
                      )
                      (backward-delete-char (- (match-end 1) (match-beginning 1)))
                      (call-interactively 'backward-delete-char)
                  )
              )
          )
      )
  )

#+END_SRC
