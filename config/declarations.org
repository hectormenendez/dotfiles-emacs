#+TITLE: Declarations

** [[./declarations-path.org][Path managemement]]
   Functions that allow to centralise path management througout the config.
   #+INCLUDE: ./declarations-path.org

** [[./declarations-frame.org][Frame State]]
   Functions that allow to manage state for frame position and shape.
   #+INCLUDE: ./declarations-frame.org

** [[./declarations-projectile.org][Projectile helpers]]
   Functions that give extra functionality to Projectile

** Toggle Window :test:
   Maximizes current window, and restores it back to normal.
   #+BEGIN_SRC emacs-lisp
     (defun etor/window-toggle ()
         "Allows to maximize current buffer"
         (interactive)
         (if (= 1 (length (window-list)))
             (jump-to-register '_)
             (progn
                 (window-configuration-to-register '_)
                 (delete-other-windows)
             )
         )
     )
   #+END_SRC

#+BEGIN_SRC emacs-lisp
(defun etor/backspace-to-tab-stop ()
    "Delete whitespace backwards to the next tab-stop, otherwise delete one character."
    (interactive)
    (if
        (or indent-tabs-mode
            (region-active-p)
            (save-excursion
                (> (point) (progn (back-to-indentation) (point)))
            ))
        (call-interactively 'backward-delete-char-untabify)
        (let
            ((movement (% (current-column) tab-width)) (p (point)))
            (when (= movement 0) (setq movement tab-width))
            ;; Account for edge case near beginning of buffer
            (setq movement (min (- p 1) movement))
            (save-match-data
                (if
                    (string-match "[^\t ]*\\([\t ]+\\)$"
                        (buffer-substring-no-properties (- p movement) p)
                    )
                    (backward-delete-char (- (match-end 1) (match-beginning 1)))
                    (call-interactively 'backward-delete-char)
                )
            )
        )
    )
)

#+END_SRC
