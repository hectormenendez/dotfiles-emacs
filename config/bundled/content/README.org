* Bundled content features
Controls how the bundled content features behave.

** [[https://github.com/emacs-mirror/emacs/blob/master/lisp/international/mule.el][mule.el]]
Internationalization package. Set everything to UTF-8.
#+BEGIN_SRC emacs-lisp
  (use-package mule
      :demand t
      :config
      (setq
          locale-coding-system 'utf-8
          buffer-file-coding-system 'utf-8
      )
      (prefer-coding-system 'utf-8)
      (set-charset-priority 'unicode)
      (set-language-environment 'utf-8)
      (set-default-coding-systems 'utf-8)
      (set-terminal-coding-system 'utf-8)
      (set-keyboard-coding-system 'utf-8)
      (set-selection-coding-system 'utf-8)
  )
#+END_SRC

** [[https://github.com/emacs-mirror/emacs/blob/master/lisp/paren.el][paren.el]]
Shows matching parenthesis, it only makes sense to enable it when programming.
#+BEGIN_SRC emacs-lisp
  (use-package paren
      :commands show-paren-mode
      :init (add-hook 'prog-mode-hook #'show-paren-mode)
  )
#+END_SRC

** [[https://github.com/emacs-mirror/emacs/blob/master/lisp/electric.el][electric.el]]
Automates content insertion / adaptation. it only makes sense to enable it when programming.
#+BEGIN_SRC emacs-lisp
  (use-package electric
      :commands (electric-indent-mode electric-quote-mode electric-pair-mode)
      :init
      (add-hook 'prog-mode-hook '(lambda ()
          (electric-indent-mode 1)
          (electric-quote-mode 1)
          (electric-pair-mode 1)
      ))
  )
#+END_SRC

** [[https://github.com/emacs-mirror/emacs/blob/master/lisp/whitespace.el][whitespace.el]]
Manages whitespace behaviour and setup.
#+BEGIN_SRC emacs-lisp
  (use-package whitespace
      :delight whitespace-mode
      :commands whitespace-mode
      :init
      (add-hook 'prog-mode-hook #'whitespace-mode)
      :config (setq
          whitespace-style '(face tabs tab-mark trailing lines-tail); Highlight these
          whitespace-line-column fill-column; Use the fill-column to mark overflowed
          whitespace-display-mappings '(; Customize the look for these characters
              (tab-mark ?\t [?â€º ?\t])
              (newline-mark 10  [36 10])
          )
      )
  )
#+END_SRC

** [[https://github.com/emacs-mirror/emacs/blob/master/lisp/register.el][register.el]]
Enables register extensions, allowing saving several pieces of of buffer state
to named variables.
#+BEGIN_SRC emacs-lisp
  (use-package register :demand t)
#+END_SRC

;; ;; Don't knwo why, but the indent.el package is not available to require, and I'm not
;; ;; sure how to import it, so instead these will be set on initialization.
;; (use-package indent
;;     :init
;;     ;; TODO: this should be declared on the lisp-mode section.
;;     ;; I don't follow Lisp indenting guidelines, so the default indentation breaks for me.
;;     (add-hook 'emacs-lisp-mode-hook '(lambda ()
;;         (setq-local
;;             ;; indent-line-function 'indent-relative
;;             lisp-body-indent tab-width
;;         )
;;     ))
;;     :config
;;     (setq-default indent-tabs-mode nil); Use spaces for tabs
;;     (setq
;;         indent-line-function 'indent-relative
;;         tab-always-indent t; The tab key will always indent (duh)
;;         tab-stop-list '(4 8 12 16 20 24 28 32 36 40 44 48 52 56 60 64 68 72 76 80 84)
;;     )
;; )

