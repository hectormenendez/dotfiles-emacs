#+TITLE: File handling

*** [[https://github.com/emacs-mirror/emacs/blob/master/lisp/files.el][files.el]]
    Defines most of Emacs's file-handling functions.
    #+BEGIN_SRC emacs-lisp
      (use-package files
          :demand t
          :config
              (setq
                  ;; Backups
                  make-backup-files t; make a backup the first time a file is saved
                  backup-by-copying t; copy file into backup then write buffer on top of it
                  delete-old-versions t; delete excess backup files silently
                  version-control t; always make numeric backups for each save
                  backup-directory-alist; Save all backups in a single directory
                      (list (cons "." (etor/path:get "backups")))

                  ;; AutoSave
                  auto-save-default nil; Disable autosaving alltogether
                  auto-save-file-name-transforms; if ever enabled, save'em all to a folder.
                      (list (list ".*" (etor/path:get "autosave") t))

                  ;; Content
                  require-final-newline nil; Wether to add a newline to the end of files.
              )
      )
    #+END_SRC

-----

*** [[https://github.com/emacs-mirror/emacs/blob/master/lisp/recentf.el][recentf.el]]
Maintains a menu for visiting files that were operated on recently.
The recentf file list automatically saved across Emacs sessions.
#+BEGIN_SRC emacs-lisp
  (use-package recentf
      :commands recentf-mode
      :init (add-hook 'after-init-hook #'recentf-mode)
      :config
          (setq
              recentf-save-file (expand-file-name "_recentf" user-emacs-directory)
              recentf-filename-handlers '(abbreviate-file-name)
          )
  )
#+END_SRC

*** [[https://github.com/emacs-mirror/emacs/blob/master/lisp/savehist.el][savehist.el]]
    Many editors (e.g. Vim) have the feature of saving minibuffer history to an external
    file after exit.  This package provides the same feature in Emacs.
    #+BEGIN_SRC emacs-lisp
      (use-package savehist
          :commands savehist-mode
          :init (add-hook 'after-init-hook #'savehist-mode)
          :config
              (setq
                  savehist-file (expand-file-name "_history" user-emacs-directory)
                  savehist-save-minibuffer-history 1
                  history-length t
                  history-delete-duplicates t
              )
      )
    #+END_SRC

*** [[https://github.com/emacs-mirror/emacs/blob/master/lisp/saveplace.el][saveplace.el]]
    Automatically save place in files, so that visiting them later automatically moves point
    to the saved position, when the file is first found.
    #+BEGIN_SRC emacs-lisp
      (use-package saveplace
          :commands save-place-mode
          :init (add-hook 'after-init-hook #'save-place-mode)
          :config (setq save-place-file (expand-file-name "_saveplace" user-emacs-directory))
      )
    #+END_SRC

*** [[https://github.com/emacs-mirror/emacs/blob/master/lisp/autorevert.el][autorevert.el]]
    Whenever a file is changed externally, auto update it if it's opened.
    #+BEGIN_SRC emacs-lisp
      (use-package autorevert
          :commands auto-revert-mode
          :delight (auto-revert-mode); don't show the mode-line
          :init (add-hook 'after-init-hook #'global-auto-revert-mode)
          :config
              (setq
                  auto-revert-verbose nil; no need of advertise the revert
                  global-auto-revert-non-file-buffers t; Enable autorevert on dired buffers
              )
      )
    #+END_SRC

*** [[https://github.com/emacs-mirror/emacs/blob/master/lisp/vc-hooks.el][vc-hooks.el]]
    #+BEGIN_SRC emacs-lisp
      (use-package vc-hooks
          :demand t
          :config
              (setq
                  vc-follow-symlinks t; Don't ask to follow symlinks, just do it.
              )
      )
    #+END_SRC
